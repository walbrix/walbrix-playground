#!/bin/sh 
if [ "$#" -ne 1 ]; then
	echo "Usage: $0 tarball"
	exit 1
fi
TARBALL=$1
if [ ! -f "$TARBALL" ]; then
	echo "$TARBALL does not exist."
	exit 2
fi
VA_NAME=`basename "$TARBALL" | sed 's/^\(.\+\)-[a-z0-9_]\+.\+-[a-z]\+\.tar\.xz$/\1/'`
if [ -z "$VA_NAME" ]; then
	echo "`basename $TARBALL` is not an appropriate image file name."
	exit 3
fi
echo "Importing $TARBALL as $VA_NAME..."
IMAGE_ID=`docker import - $VA_NAME < $TARBALL` || exit
echo "http://"`hostname`":5000"
echo "ssh -p 5022 "`hostname`
echo "docker kill $VA_NAME to terminate the container"
TMPDIR=/tmp/$IMAGE_ID
mkdir -p $TMPDIR/etc/ssh
cp /etc/ssh/moduli $TMPDIR/etc/ssh/
[ -f /etc/ssh/ssh_host_key ] && cp /etc/ssh/ssh_host_* $TMPDIR/etc/ssh/
mkdir -p $TMPDIR/root/.ssh
chmod 700 $TMPDIR/root/.ssh
[ -f ~/.ssh/id_rsa.pub ] && cat ~/.ssh/id_rsa.pub >> $TMPDIR/root/.ssh/authorized_keys
echo "" >> $TMPDIR/root/.ssh/authorized_keys
[ -f ~/.ssh/authorized_keys ] && cat ~/.ssh/authorized_keys >> $TMPDIR/root/.ssh/authorized_keys
echo "Running container..."
docker run --rm --privileged --name=$VA_NAME -v $TMPDIR:/mnt -p 5000:80 -p 5022:22 $IMAGE_ID sh -c 'cp -a /mnt/. / && exec /sbin/init'

echo "Container terminated. deleting the image..."
docker rmi $IMAGE_ID

